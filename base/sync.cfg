[gcode_macro SET_SURFACE]
description: Set probe offset based on build surface
gcode:
    {% if "_CONFIG_SURFACES" in printer["gcode"].commands %}
        {% set general     = printer["gcode_macro _CONFIG"] %}
        {% set surfaces     = printer["gcode_macro _CONFIG_SURFACES"] %}

        {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _CONFIG_BASE"].surface)|string|upper %}
        {% set SURFACE = surfaces.surfaces %}

        _LOG LVL=TRACE NAME=sync.SET_SURFACE MSG="Attemping to set surface to '{MATERIAL}'..."

        {% if SURFACE['Enabled'] %}
            {% if SURFACE[MATERIAL] %}
                SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=surface VALUE='"{MATERIAL}"'
                SAVE_VARIABLE VARIABLE=surface VALUE='"{MATERIAL}"'

                _LOG NAME=sync.SET_SURFACE MSG="Setting surface to {MATERIAL}: {SURFACE[MATERIAL]}"
                {% set BASE_Z = general.probe %}
                SET_GCODE_OFFSET Z={BASE_Z + SURFACE[MATERIAL]['Height']}
            {% else %}
                SET_GCODE_OFFSET Z={general.probe}
                _LOG LVL=ERROR NAME=sync.SET_SURFACE MSG="Unknown surface material '{MATERIAL}'!"
            {% endif %}
        {% endif %}

    {% endif %}

[gcode_macro SET_FILAMENT]
description: Change defaults based on filament type
gcode:
    {% if "_CONFIG_FILAMENTS" in printer["gcode"].commands %}
        {% set general   = printer["gcode_macro _CONFIG"] %}
        {% set filaments = printer["gcode_macro _CONFIG_FILAMENTS"] %}

        {% set MATERIAL = params.MATERIAL|upper|string %}                   ; Get material type from slicer
        {% set BRAND    = params.BRAND|upper|string %}
        {% set COLOR    = params.COLOR|upper|string %}

        {% set FILAMENT = filaments.filaments %}

        _LOG LVL=TRACE NAME=sync.SET_FILAMENT MSG="Attemping to set filament to '{MATERIAL}', '{BRAND}', '{COLOR}'..."

        {% if filaments.enabled %}
            {% if MATERIAL == "NONE" or not 'MATERIAL' in params %}
                _LOG NAME=sync.SET_FILAMENT MSG="Setting filament to none"
                SET_GCODE_VARIABLE MACRO=_CONFIG_BASE VARIABLE=filament VALUE=['"NONE"','"NONE"','"NONE"']
                SAVE_VARIABLE VARIABLE=filament VALUE=['"NONE"','"NONE"','"NONE"']
                # Revert settings to default
                SET_PRESSURE_ADVANCE ADVANCE={general.pa} SMOOTH_TIME={general.pa_st}
                {% if general.retract_enabled %}
                    SET_RETRACTION RETRACT_LENGTH={general.retract_length} RETRACT_SPEED={general.retract_speed} UNRETRACT_LENGTH={general.unretract_length} UNRETRACT_SPEED={general.unretract_speed}
                {% endif %}
            {% else %}
                {% if FILAMENT[MATERIAL][BRAND] %}
                    {% set FILAMENT = FILAMENT[MATERIAL][BRAND] %}
                    _LOG NAME=sync.SET_FILAMENT MSG="Setting filament to {MATERIAL} {BRAND} {COLOR}: {FILAMENT}"
                    SET_GCODE_VARIABLE MACRO=_CONFIG_BASE VARIABLE=filament VALUE=['"{MATERIAL}"','"{BRAND}"','"{COLOR}"']
                    SAVE_VARIABLE VARIABLE=filament VALUE=['"{MATERIAL}"','"{BRAND}"','"{COLOR}"']

                    SET_PRESSURE_ADVANCE ADVANCE={FILAMENT['PA']} SMOOTH_TIME={FILAMENT['PA_ST']}
                    {% if general.retract_enabled %}
                        SET_RETRACTION RETRACT_LENGTH={FILAMENT['Retract']} RETRACT_SPEED={FILAMENT['RetractSpeed']} UNRETRACT_EXTRA_LENGTH={FILAMENT['Unretract']} UNRETRACT_SPEED={FILAMENT['UnretractSpeed']}
                    {% endif %}
                {% else %}
                    _LOG LVL=ERROR NAME=sync.SET_FILAMENT MSG="Unknown filament material/brand! {MATERIAL} {BRAND}"
                {% endif %}
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro SET_NOZZLE]
description: Change defaults based on nozzle diameter
gcode:
    {% if "_CONFIG_NOZZLES" in printer["gcode"].commands %}
        {% set base    = printer["gcode_macro _CONFIG_BASE"] %}
        {% set nozzles = printer["gcode_macro _CONFIG_NOZZLES"] %}

        {% set DIAMETER = params.DIAMETER|default(base.nozzle)|string %}                          ; Get nozzle diameter from slicer

        {% set NOZZLE = nozzles.nozzles %}

        _LOG LVL=TRACE NAME=sync.SET_NOZZLE MSG="Attemping to set nozzle to '{DIAMETER}'..."
        {% if nozzles.enabled %}
            {% if NOZZLE[DIAMETER] %}
                {% set prevNOZZLE = base.nozzle|string %}
                {% set prevNOZZLE = NOZZLE[prevNOZZLE] %}
                {% set NOZZLE = NOZZLE[DIAMETER] %}
                {% if not NOZZLE == prevNOZZLE %}
                    SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=nozzle VALUE='"{DIAMETER}"
                    SAVE_VARIABLE VARIABLE=nozzle VALUE='"{DIAMETER}"

                    _LOG NAME=sync.SET_NOZZLE MSG="Setting nozzle to {DIAMETER}: {NOZZLE}"
                    SET_GCODE_OFFSET Z_ADJUST=-{prevNOZZLE['ZAdjust']} ; Undo previous z_offset
                    SET_GCODE_OFFSET Z_ADJUST={NOZZLE['ZAdjust']} ; Adjust z_offset
                {% endif %}
            {% else %}
                _LOG LVL=ERROR NAME=sync.SET_NOZZLE MSG="Unknown nozzle size '{DIAMETER}'!"
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro _SYNC_SETTINGS]
description: Sync printer settings with settings file
gcode:
    {% set STARTUP = params.STARTUP|default(False) %}

    {% set base = printer["gcode_macro _CONFIG_BASE"] %}
    {% set general = printer["gcode_macro _CONFIG"] %}
    {% set hardware = printer["gcode_macro _CONFIG_HARDWARE"] %}

    {% set svv = printer.save_variables.variables %}

    _LOG LVL=TRACE NAME=sync._SYNC_SETTINGS MSG="Syncing settings..."

    # Machine
    _SET_SPEED PERCENT=100
    SET_VELOCITY_LIMIT VELOCITY={general.speed} ACCEL={general.accel} SQUARE_CORNER_VELOCITY={general.scv} MINIMUM_CRUISE_RATIO={general.decel_factor}
    _LOG NAME=sync._SYNC_SETTINGS MSG="Set speed factor: 100%, VELOCITY={general.speed} ACCEL={general.accel} SQUARE_CORNER_VELOCITY={general.scv} MINIMUM_CRUISE_RATIO={general.decel_factor}"
    # Extruder
    _SET_EXTRUDE PERCENT=100
    _LOG NAME=sync._SYNC_SETTINGS MSG="Set extrusion factor to 100%"
    # Saved variables
    SET_CONFIG SECT=BASE NAME=bed_clear TO={svv.bed_clear|default(False)}

    {% if "_CONFIG_SURFACES" in printer["gcode"].commands and printer["gcode_macro _CONFIG_SURFACES"].enabled %}
        SET_SURFACE MATERIAL={svv.surface|default("PEI_TEXTURED")|string}
    {% endif %}

    {% if "_CONFIG_NOZZLES" in printer["gcode"].commands and printer["gcode_macro _CONFIG_NOZZLES"].enabled %}
        SET_NOZZLE DIAMETER={svv.nozzle|default("0.4")|string}
    {% endif %}

    # MMU
    {% if not hardware.has_mmu %}
        {% if "_CONFIG_FILAMENTS" in printer["gcode"].commands and printer["gcode_macro _CONFIG_FILAMENTS"].enabled %}
            {% set FILAMENT = svv.filament|default(['"ABS"','"POLYMAKER"','"BLACK"']) %}
            SET_FILAMENT MATERIAL={FILAMENT[0]} BRAND={FILAMENT[1]} COLOR={FILAMENT[2]}
        {% endif %}
    {% else %}
        {% if STARTUP %}
            MMU_SPOOLMAN REFRESH=1 FIX=1 SYNC=1
        {% endif %}
    {% endif %}
