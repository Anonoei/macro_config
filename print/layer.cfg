#####################################################################
#   Layer macros
#####################################################################
[gcode_macro _LAYER_BEFORE_CHANGE]
description: Called before layer change by slicer
gcode:
    #_SET_STATUS STATUS=printing
    {% set HEIGHT = params.HEIGHT|default(printer.toolhead.position.z)|float %}
    {% set LAYER = params.LAYER|default(-1)|int %}

    SET_GCODE_VARIABLE MACRO=_LAYER_STATUS VARIABLE=height VALUE={HEIGHT}
    {% if LAYER == -1 %}
        SET_GCODE_VARIABLE MACRO=_LAYER_STATUS VARIABLE=layer VALUE={printer['gcode_macro _LAYER_STATUS'].layer + 1}
    {% else %}
        {% set LAYER = LAYER + 1 %}
        SET_GCODE_VARIABLE MACRO=_LAYER_STATUS VARIABLE=layer VALUE={LAYER}
        SET_PRINT_STATS_INFO CURRENT_LAYER={LAYER}
    {% endif %}

    {% if printer["gcode"].commands["TIMELAPSE_TAKE_FRAME"] %}
        TIMELAPSE_TAKE_FRAME
    {% endif %}

[gcode_macro _LAYER_AFTER_CHANGE]
description: Called after layer change by slicer
gcode:
    #_SET_STATUS STATUS=printing

[gcode_macro _LAYER_STATUS]
description: Stores height variables
variable_height            : -1.0
variable_layer             : 0
variable_layer_height      : -1.0
variable_pause_next_layer  : { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer    : { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode:
    _LOG NAME=print._LAYER_STATUS MSG="Height: {height}"
    _LOG NAME=print._LAYER_STATUS MSG="Layer: {layer}"
    _LOG NAME=print._LAYER_STATUS MSG="Layer height: {layer_height}"
    _LOG NAME=print._LAYER_STATUS MSG="pause_next_layer: {pause_next_layer}"
    _LOG NAME=print._LAYER_STATUS MSG="pause_at_layer: {pause_at_layer}"

[gcode_macro SET_PAUSE_NEXT_LAYER]
description: Enable a pause if the next layer is reached
gcode:
  {% set pause_next_layer = printer['gcode_macro _LAYER_STATUS'].pause_next_layer %}
  {% set ENABLE = params.ENABLE|default(1)|int != 0 %}
  {% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=_LAYER_STATUS VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

# Usage: SET_PAUSE_AT_LAYER [ENABLE=[0|1]] [LAYER=<number>] [MACRO=<name>]
[gcode_macro SET_PAUSE_AT_LAYER]
description: Enable/disable a pause if a given layer number is reached
gcode:
  {% set pause_at_layer = printer['gcode_macro _LAYER_STATUS'].pause_at_layer %}
  {% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
             else params.LAYER is defined %}
  {% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
  {% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
  SET_GCODE_VARIABLE MACRO=_LAYER_STATUS VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

# Usage: SET_PRINT_STATS_INFO [TOTAL_LAYER=<total_layer_count>] [CURRENT_LAYER= <current_layer>]
[gcode_macro SET_PRINT_STATS_INFO]
rename_existing: SET_PRINT_STATS_INFO_BASE
description: Overwrite, to get pause_next_layer and pause_at_layer feature
gcode:
    {% set pause_next_layer = printer['gcode_macro _LAYER_STATUS'].pause_next_layer %}
    {% set pause_at_layer = printer['gcode_macro _LAYER_STATUS'].pause_at_layer %}

    {% if pause_next_layer.enable %}
        _LOG NAME=print.PAUSE_NEXT_LAYER MSG="Calling '{pause_next_layer.call}'!"
        {pause_next_layer.call}
        SET_PAUSE_NEXT_LAYER ENABLE=0
    {% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
        _LOG NAME=print.PAUSE_NEXT_LAYER MSG="Calling '{pause_at_layer.call}', reached layer {pause_at_layer.layer}!"
        {pause_at_layer.call}
        SET_PAUSE_AT_LAYER ENABLE=0
    {% endif %}
    SET_PRINT_STATS_INFO_BASE {rawparams}
