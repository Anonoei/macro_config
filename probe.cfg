#####################################################################
#   Probe
#####################################################################

[gcode_macro PROBE_PRE]
description: Perform pre-probe actions
gcode:
    {% set BACK = params.BACK|default(0) %}

    {% if printer["gcode"].commands["_PROBE_PRE"] %}
        _MACRO_ENTRY NAME=PROBE_PRE

        _PROBE_PRE

        _MACRO_EXIT NAME=PROBE_PRE MOVE={BACK}
    {% endif %}

[gcode_macro PROBE_POS]
description: Perform post-probe actions
gcode:
    {% set BACK = params.BACK|default(0) %}

    {% if printer["gcode"].commands["_PROBE_POS"] %}
        _MACRO_ENTRY NAME=PROBE_POS

        _PROBE_POS

        _MACRO_EXIT NAME=PROBE_POS MOVE={BACK}
    {% endif %}

[gcode_macro PROBE_LOCK]
description: Locks detachable probes
gcode:
    {% if printer["gcode"].commands["_PROBE_LOCK"] %}
        _MACRO_ENTRY NAME=PROBE_LOCK

        _PROBE_LOCK LOCK=1

        _MACRO_EXIT NAME=PROBE_LOCK
    {% endif %}

[gcode_macro PROBE_UNLOCK]
description: Unlocks detachable probes
gcode:
    {% if printer["gcode"].commands["_PROBE_LOCK"] %}
        _MACRO_ENTRY NAME=PROBE_UNLOCK

        _PROBE_LOCK LOCK=0

        _MACRO_EXIT NAME=PROBE_UNLOCK
    {% endif %}

[gcode_macro PROBE_CHECK]
gcode:
    {% if printer["gcode"].commands["_PROBE_CHECK"] %}
        QUERY_PROBE
        _CLEAR_BUFFER
        _PROBE_CHECK ACTION={params.ACTION|default('')}
    {% endif %}

[gcode_macro PROBE_CALIBRATE]
rename_existing: BASE_PROBE_CALIBRATE
gcode:
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    PROBE_PRE BACK=1

    BASE_PROBE_CALIBRATE {% for p in params
                %}{'%s=%s ' % (p, params[p])}{%
               endfor %}

    G0 Z{CFG.probe_hop} F{CFG.probe_hop_speed} # Post z-probe z-hop

    PROBE_POS BACK=1

[gcode_macro PROBE_ACCURACY]
rename_existing: BASE_PROBE_ACCURACY
gcode:
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    PROBE_PRE BACK=1

    BASE_PROBE_ACCURACY {% for p in params
                %}{'%s=%s ' % (p, params[p])}{%
               endfor %}

    G0 Z{CFG.probe_hop} F{CFG.probe_hop_speed} # Post z-probe z-hop

    PROBE_POS BACK=1
