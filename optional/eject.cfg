[gcode_macro EJECT_PARTS]
description: Eject parts from the bed
variable_eject_objects: {}
gcode:
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% set STEP = params.STEP|default(40.0)|float %}
    {% set SPEED_XY = 8000 %}
    {% set SPEED_EJECT = 2000 %}
    {% set SPEED_Z = 2000 %}
    {% set POS_Z = 1 %}
    {% set POS_Z_HOP = 10 %}

    {% if not CFG.eject %}
        _LOG NAME="EJECT.EJECT_PART" MSG="Not ejecting parts"
    {% else %}
        FORCE_HOME NAME="eject.EJECT_PARTS"

        {% if not eject_objects %}
            _LOG LVL=ERROR NAME=eject.EJECT_PARTS MSG="No parts found to eject!"
        {% endif %}

        {% set eject_default = 'X' not in params and 'Y' not in params %}

        {% set max = printer.toolhead.axis_maximum %}
        {% set min = printer.toolhead.axis_minimum %}
        {% set mid = {'x': (max.x-min.x)/2, 'y': (max.y-min.y)/2, 'z': (max.z-min.z)/2} %}

        {% set object_centers = eject_objects | map(attribute='center') %}
        {% set object_centers_x = (object_centers | map(attribute=0)) %}
        {% set object_centers_y = (object_centers | map(attribute=1)) %}
        {% set eject_at = [] %}

        {% if eject_default or 'Y' in params %}
            {% for pos in object_centers_y %}
                {% if not pos in eject_at %}
                    {% set _ = eject_at.append(pos) %}
                {% endif %}
            {% endfor %}
        {% else %}
            {% for pos in object_centers_x %}
                {% if not pos in eject_at %}
                    {% set _ = eject_at.append(pos) %}
                {% endif %}
            {% endfor %}
        {% endif %}

        _LOG NAME="EJECT.EJECT_PARTS" MSG="Ejecting at {eject_at}"

        # {% if eject_default or 'Y' in params %}
        #     _LOG NAME="EJECT.EJECT_PARTS" LVL=TRACE MSG="Performing Y EJECT"

        #     _POSITION_ABSOLUTE
        #     {% set STEPS = (max.x-min.x)/STEP %}
        #     {% set STEPS = (STEPS/2)|int %}
        #     _LOG NAME="EJECT.EJECT_PARTS" LVL=TRACE MSG="Y Eject steps: {STEPS}, starting at {mid.x}, step size: {STEP}"

        #     G0 X{mid.x} Y{max.y} F{SPEED_XY}
        #     G0 Z{POS_Z} F{SPEED_Z}
        #     G0 Y{min.y} F{SPEED_EJECT}
        #     G0 Z{POS_Z_HOP} F{SPEED_Z}
        #     G0 Y{max.y} F{SPEED_XY}
        #     {% for s in range(STEPS) %}
        #         {% set X_HI = mid.x + (STEP * (s + 1)) %}
        #         _LOG NAME="EJECT.EJECT_PARTS" LVL=TRACE MSG="Y Ejecting at {X_HI}"
        #         G0 X{X_HI} Y{max.y} F{SPEED_XY}
        #         G0 Z{POS_Z} F{SPEED_Z}
        #         G0 Y{min.y} F{SPEED_EJECT}
        #         G0 Z{POS_Z_HOP} F{SPEED_Z}
        #         G0 Y{max.y} F{SPEED_XY}
        #     {% endfor %}
        #     {% for s in range(STEPS) %}
        #         {% set X_LO = mid.x - (STEP * (s + 1)) %}
        #         _LOG NAME="EJECT.EJECT_PARTS" LVL=TRACE MSG="Y Ejecting at {X_LO}"
        #         G0 X{X_LO} Y{max.y} F{SPEED_XY}
        #         G0 Z{POS_Z} F{SPEED_Z}
        #         G0 Y{min.y} F{SPEED_EJECT}
        #         G0 Z{POS_Z_HOP} F{SPEED_Z}
        #         G0 Y{max.y} F{SPEED_XY}
        #     {% endfor %}
        # {% endif %}
    {% endif %}
