########################################################################
# Simplified subset of commands For visability in Mainsail/Fluidd UI
########################################################################
[gcode_macro SET_MMU_GATE]
description: Set ERCF gates
gcode:
    {% set GATE     = params.GATE|int %}

    {% set SPOOL_ID = params.ID|default(-1)|int %}
    {% set AVAIL    = params.AVAIL|default(1)|int %}

    {% if not MATERIAL in params and not BRAND in params and not COLOR in params %}
        MMU_GATE_MAP GATE={GATE} SPOOLID={SPOOL_ID} AVAILABLE={AVAIL}
    {% else %}
        {% set MATERIAL = params.MATERIAL|string|upper %}
        {% set BRAND    = params.BRAND|default("")|string|upper %}
        {% set COLOR    = params.COLOR|default("")|string|lower %}

        _LOG LVL=INFO _NAME=opt.mmu.QoL.SET_MMU_GATE MSG="Setting gate {GATE}: to {MATERIAL} {COLOR}, ID={SPOOL_ID}, AVAIL={AVAIL}"
        MMU_GATE_MAP GATE={GATE} MATERIAL={MATERIAL} COLOR={COLOR} NAME={BRAND} SPOOLID={SPOOL_ID} AVAILABLE={AVAIL}
    {% endif %}

[gcode_macro MMU_GATES]
description: Show MMU gates
gcode:
    {% set svv = printer.save_variables.variables %}

    {% set GATE = params.GATE|default(-1)|int %}

    {% set MAT = params.MATERIAL|default("NONE")|string|upper %}

    {% set MATERIALS = svv.mmu_state_gate_material %}
    {% set NAMES     = svv.mmu_state_gate_filament_name %}
    {% set COLORS    = svv.mmu_state_gate_color %}
    {% set STATUS    = svv.mmu_state_gate_status %}
    {% set IDs       = svv.mmu_state_gate_spool_id %}

    {% set SELECTED = printer.mmu.gate %}
    {% set LOADED = printer.mmu.filament %}

    {% if GATE == -1 %}
        {% for idx in range(MATERIALS|length) %}
            {% if not MAT == "NONE" %}
                {% if MATERIALS[idx] == MAT %}
                    _LOG NAME=opt.mmu.QoL.MMU_GATES MSG="Gate {idx}: [S{STATUS[idx]} ID{IDs[idx]}] ({MATERIALS[idx]},{COLORS[idx]}) - {NAMES[idx]}"
                {% endif %}
            {% else %}
                _LOG LVL=INFO NAME=opt.mmu.QoL.MMU_GATES MSG="Gate {idx}: [S{STATUS[idx]} ID{IDs[idx]}] ({MATERIALS[idx]},{COLORS[idx]}) - {NAMES[idx]}"
            {% endif %}
        {% endfor %}
    {% else %}
        _LOG NAME=opt.mmu.QoL.MMU_GATES MSG="Gate {GATE}: [S{STATUS[GATE]}, ID{IDs[GATE]}] {NAMES[GATE]} ({MATERIALS[GATE]}, {COLORS[GATE]})"
    {% endif %}
    _LOG NAME=opt.mmu.QoL.MMU_GATES MSG="Selected: {SELECTED}, Loaded: {LOADED}"

# Example SuperSlicer configuration
#  On each filament:
#    "Filament Settings" > "Custom G-code" > "Start G-code":
#      SET_TOOL MATERIAL='ABS' BRAND='POLYMAKER' COLOR='PURPLE'
#  On start:
#    "Printer Settings" > "Custom G-code" > "Start G-code"
#    PRINT_PREPARE (prepare to start printing, heat bed/nozzle)
#    {start_filament_gcode[initial_extruder]}
#    PRINT_START
[gcode_macro _SET_TOOL]
description: Find tool matching provided arguments
variable_last_tool: -1
gcode:
    SET_GCODE_VARIABLE MACRO=SET_TOOL VARIABLE=last_tool VALUE=-1

    {% set MATERIAL=params.MATERIAL|string|upper %}
    {% set BRAND=params.BRAND|default("NONE")|string|upper %}
    {% set COLOR=params.COLOR|default("none")|string|lower %}

    {% set SOFT=params.SOFT|default(0)|int %}
    {% set RANDOM=params.RANDOM|default(0)|int %}

    _LOG LVL=INFO NAME=opt.mmu.QoL.SET_TOOL MSG="Checking for gate with {MATERIAL} {BRAND} {COLOR}"

    {% set svv = printer.save_variables.variables %}

    {% set MATERIALS = svv.mmu_state_gate_material %}
    {% set NAMES = svv.mmu_state_gate_filament_name %}
    {% set COLORS = svv.mmu_state_gate_color %}
    {% set STATUS = svv.mmu_state_gate_status %}
    {% set SELECTED = printer.mmu.gate %}
    {% set LOADED = printer.mmu.filament %}
    {% if LOADED|upper == "LOADED" %}
        {% set LOADED = 1 %}
    {% else %}
        {% set LOADED = 0 %}
    {% endif %}

    {% set GATE = -1 %}
    {% set MAT_IDX = [] %}
    {% set COL_IDX = [] %}
    {% set BND_IDX = [] %}
    {% set BEST_IDX = [] %}

    {% for idx in range(MATERIALS|length) %}
        {% if MATERIALS[idx] == MATERIAL and STATUS[idx] >= 0 %}
            {% set _ = MAT_IDX.append(1.0) %}
        {% else %}
            {% set _ = MAT_IDX.append(-128.0) %}
        {% endif %}
    {% endfor %}
    _LOG LVL=TRACE NAME=opt.mmu.QoL.SET_TOOL MSG="Got materials {MAT_IDX}"

    {% if COLOR != "none" %}
        {% for idx in range(MATERIALS|length) %}
            {% if COLORS[idx] == COLOR and STATUS[idx] >= 0 %}
                {% set _ = COL_IDX.append(1.0) %}
            {% else %}
                {% set _ = COL_IDX.append(0.0) %}
            {% endif %}
        {% endfor %}
        _LOG LVL=TRACE NAME=opt.mmu.QoL.SET_TOOL MSG="Got colors {COL_IDX}"
    {% else %}
        {% for idx in range(MATERIALS|length) %}
            {% set _ = COL_IDX.append(0.0) %}
        {% endfor %}
    {% endif %}

    {% if BRAND != "NONE" %}
        {% for idx in range(MATERIALS|length) %}
            {% set bnd = NAMES[idx].split(" ")[0] %}
            {% if bnd == BRAND and STATUS[idx] >= 0 %}
                {% set _ = BND_IDX.append(0.0) %}
            {% else %}
                {% set _ = BND_IDX.append(-1.0) %}
            {% endif %}
        {% endfor %}
        _LOG LVL=TRACE NAME=opt.mmu.QoL.SET_TOOL MSG="Got brands {BND_IDX}"
    {% else %}
        {% for idx in range(MATERIALS|length) %}
            {% set _ = BND_IDX.append(0) %}
        {% endfor %}
    {% endif %}

    {% for idx in range(MATERIALS|length) %}
        {% set VAL = MAT_IDX[idx] + COL_IDX[idx] + BND_IDX[idx] %}
        {% if idx == SELECTED and LOADED %}
            {% set VAL = VAL + 0.5 %}
        {% endif %}
        {% set _ = BEST_IDX.append(VAL) %}
    {% endfor %}

    {% set GATE = BEST_IDX.index(BEST_IDX|max) %}

    SET_GCODE_VARIABLE MACRO=SET_TOOL VARIABLE=last_tool VALUE={GATE}
    _LOG NAME=opt.mmu.QoL.SET_TOOL MSG="Got tool values: {BEST_IDX}"
    {% if GATE != -1 %}
        _LOG LVL=INFO NAME=opt.mmu.QoL.SET_TOOL MSG="Setting tool to T{GATE} with {MATERIALS[GATE]} {NAMES[GATE]} {COLORS[GATE]}!" DISPLAY=1
        {% if not SOFT %}
            T{GATE}
        {% endif %}
    {% else %}
        _LOG LVL=ERROR NAME=opt.mmu.QoL.SET_TOOL MSG="Failed to pick a gate!"
    {% endif %}

[gcode_macro VERIFY_TOOL]
gcode:
    {% set MATERIAL=params.MATERIAL|string|upper %}
    {% set BRAND=params.BRAND|default("NONE")|string|upper %}
    {% set COLOR=params.COLOR|default("none")|string|lower %}
    SET_TOOL SOFT=1 MATERIAL={MATERIAL} BRAND={BRAND} COLOR={COLOR}

[gcode_macro _MMU_ACTION_CHANGED]
description: Called when an action has changed
gcode:
    # This occurs when the ERCF action status changes.  `printer.ercf.action` will contain
    # the current action string. See Happy Hare README for full list
    {% set ACTION = params.ACTION|string %}
    {% set OLD_ACTION = params.OLD_ACTION|string %}
    {% set gate = printer['mmu']['gate'] %}

    {% if ACTION|string == "Idle" %}
    {% endif %}

    {% if ACTION|string == "Loading" %}
        _SET_STATUS STATUS=loading
    {% endif %}

    {% if ACTION|string == "Unloading" %}
        _SET_STATUS STATUS=unloading
    {% endif %}

    {% if ACTION|string == "Loading Ext" %} # Loading into the extruder
        _SET_STATUS STATUS=loading
    {% endif %}

    {% if ACTION|string == "Exiting Ext" %} # Unloading from extruder
        _SET_STATUS STATUS=unloading
    {% endif %}

    {% if ACTION|string == "Forming Tip" %}
    {% endif %}

    {% if ACTION|string == "Heating" %}
        _SET_STATUS STATUS=heating
    {% endif %}

    {% if ACTION|string == "Checking" %} # Checking gates for filament
    {% endif %}

    {% if ACTION|string == "Homing" %} # Homing the selector
         _SET_STATUS STATUS=homing
    {% endif %}

    {% if ACTION|string == "Selecting" %} # Selector is moving to select new filament
    {% endif %}

    {% if ACTION|string == "Unknown" %}
    {% endif %}
