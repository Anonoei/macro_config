[gcode_macro SOAK_BED]
description: Heat soak bed for specified time
variable_check_interval: 10 # in seconds
variable_total_time_remaining: 0
gcode:
    {% set TEMP = params.TEMP|default(110)|int %}
    {% set TIME = (params.TIME | default(15) | int) * 60 %}

    OFF_IN T={8 * 60}

    SET_HEATER HEATER=extruder TEMP=0 WAIT=0

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={TEMP}
    _LOG NAME=opt.SOAK_BED MSG="Heat soaking at {TEMP}C for {TIME/60}m" DISPLAY=1

    {% if "xyz" in printer.toolhead.homed_axes %}
        PARK  ; Park nozzle
        STEPPERS_OFF
    {% endif %}

    _LOG NAME=opt.SOAK_BED MSG="Waiting for bed to reach {TEMP}..." DISPLAY=1
    SET_HEATER HEATER=heater_bed TEMP={TEMP} WAIT=1
    _LOG LVL=TRACE NAME=opt.SOAK_BED MSG="Starting heat soak... for {TIME} checking {check_interval}s" DISPLAY=1
    {% for d in range(0, TIME, check_interval) %}
        {% set PERCENT = d/TIME * 100|int%}
        {% set REMAINING = (TIME-d) / 60|int%}
        _LOG NAME=opt.SOAK_BED MSG="soaking {'%.1f' | format(PERCENT)}%/{'%.1f' | format(REMAINING)}m" CONSOLE=FALSE DISPLAY=1
        _PAUSE T={check_interval * 1000}
    {% endfor %}
    _CLEAR_BUFFER
    _LOG NAME=opt.SOAK_BED MSG="Soak complete!"
    _PLAY_TUNE TUNE=HEAT_COMPLETE
    OFF_IN T=30

[gcode_macro SOAK_CHAMBER]
description: Heat soak until chamber reaches temperature
variable_check_interval: 10
variable_total_time_remaining: 0
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(110)|int %}
    {% set TEMP = params.TEMP|default(40)|int %}
    {% set TIME = (params.TIME | default(15) | int) * 60 %}
    {% set SENSOR = params.SENSOR %}

    OFF_IN T={8 * 60}

    SET_HEATER HEATER=extruder TEMP=0 WAIT=0

    SET_HEATER HEATER=heater_bed TEMP={BED} WAIT=0
    _LOG NAME=opt.SOAK_CHAMBER MSG="Heat soaking bed at {BED_TEMP}C until chamber reaches {TEMP}C" DISPLAY=1

        {% if "xyz" in printer.toolhead.homed_axes %}
            PARK  ; Park nozzle
            STEPPERS_OFF
        {% endif %}

     _LOG NAME=opt.SOAK_BED MSG="Waiting for bed to reach {TEMP}..." DISPLAY=1
    SET_HEATER HEATER=heater_bed TEMP={TEMP} WAIT=1

    _LOG LVL=TRACE NAME=opt.SOAK_CHAMBER MSG="Starting heat soak... for {TIME} checking {check_interval}s" DISPLAY=1
    {% for d in range(0, TIME, check_interval) %}
        {% set PERCENT = d/TIME * 100|int%}
        {% set REMAINING = (TIME-d) / 60|int%}
        _LOG NAME=opt.SOAK_BED MSG="soaking {'%.1f' | format(PERCENT)}%/{'%.1f' | format(REMAINING)}m" CONSOLE=FALSE DISPLAY=1
        _PAUSE T={check_interval * 1000}
    {% endfor %}
    _CLEAR_BUFFER
    _LOG NAME=opt.SOAK_BED MSG="Soak complete!"
    _PLAY_TUNE TUNE=HEAT_COMPLETE
    OFF_IN T=30

     _LOG NAME=opt.SOAK_CHAMBER MSG="Waiting for bed to reach {BED_TEMP}..." DISPLAY=1
     SET_HEATER HEATER=heater_bed TEMP={BED_TEMP} WAIT=1
     _LOG LVL=TRACE NAME=opt.SOAK_CHAMBER MSG="Starting chamber soak..." DISPLAY=1
     SET_HEATER HEATER=chamber_th TEMP={TEMP} WAIT=1


[gcode_macro SOAK_INT]
description: Interruptable heat soak
variable_target_temp: 0
variable_stage: None ## heating -> soaking -> done -> None

variable_check_interval: 10
variable_soak_time_remaining: 0
variable_total_time_elapsed: 0
gcode:
    {% set TARGET = params.TARGET | default(110) | float %}
    {% set TIME = (params.TIME | default(15) | int) * 60 %}

    OFF_IN T=0 ; cancel off timer

    SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=target_temp         VALUE={ TARGET }
    SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=stage               VALUE="'heating'"
    SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=soak_time_remaining VALUE={ TIME }
    SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=total_time_elapsed  VALUE=0

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }
    _LOG NAME=opt.SOAK_INT MSG="Heat soaking at {TARGET} for {TIME/60}m" DISPLAY=1
    _CG28 ; Conditional home
    PARK  ; Park nozzle
    STEPPERS_OFF

    UPDATE_DELAYED_GCODE ID=_INT_SOAKER TIME={ check_interval }

[gcode_macro SOAK_INT_CANCEL]
description: Cancels SOAK_INT
gcode:
    SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=stage VALUE="'cancel'"
    UPDATE_DELAYED_GCODE ID=_INT_SOAKER TIME=1

[delayed_gcode _INT_SOAKER]
gcode:
    {% set heat_soak = printer['gcode_macro SOAK_INT'] %}

    # update total time elapsed
    {% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
    SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }

    {% set stage = heat_soak.stage %}
    {% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
        {% set stage = "soaking" %}
    {% endif %}

    {% if stage == "soaking" %}
        # update countdown
        {% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
        SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }
        {% if soak_time_remaining == 0 %}
            {% set stage = "done" %}
        {% endif %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=stage VALUE="'{ stage }'"

    {% if stage in ("done", "cancel") %}
        {% if stage == "cancel" %}
            {% set stage = "done" %}
            TURN_OFF_HEATERS
            M117 { "soak cancelled after ~%.1fm" | format(total_time_elapsed / 60.0) }
        {% else %}
            M117 { "soak complete after %.1fm" | format(total_time_elapsed / 60.0) }
            _PLAY_TUNE TUNE=HEAT_COMPLETE
        {% endif %}

        SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=target_temp         VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=soak_time_remaining VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_INT VARIABLE=total_time_elapsed  VALUE=0
    {% else %}
        {% if total_time_elapsed % 90 == 0 %}
            {% if stage == "heating" %}
                M117 { "heating -- %.1fm elapsed" | format(total_time_elapsed / 60.0) }
            {% elif stage == "soaking" %}
                M117 { "soaking -- %.1fm remaining" | format(soak_time_remaining / 60.0) }
            {% endif %}
        {% endif %}
        UPDATE_DELAYED_GCODE ID=_INT_SOAKER TIME={ heat_soak.check_interval }
        _PAUSE T=1
    {% endif %}
