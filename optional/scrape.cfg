[gcode_macro NOZZLE_SCRAPE]
description: Scrape the nozzle to remove stubborn filament
gcode:
    {% if not printer["gcode"].commands["_CONFIG_SCRAPE"] %}
        _LOG NAME=opt.NOZZLE_SCRAPE MSG="Skipping nozzle scrape"
    {% else %}
        {% set scrape = printer["gcode_macro _CONFIG_SCRAPE"] %}
        {% set general = printer["gcode_macro _CONFIG"] %}

        {% set DIST = params.DIST|default(scrape.dflt_dist)|int %}
        {% set X    = params.X|default(scrape.dflt_x) %}
        {% set Y    = params.Y|default(scrape.dflt_y) %}
        {% set Z    = params.Z|default(scrape.dflt_z) %}

        FORCE_CLEAR NAME="opt.NOZZLE_SCRAPE"
        _LOG NAME=opt.NOZZLE_SCRAPE MSG="Scraping nozzle..."
        _CG28
        _SET_STATUS STATUS=cleaning

        _MACRO_ENTRY NAME=NOZZLE_SCRAPE
        _POSITION_ABSOLUTE
        G0 X{X} Y{Y} Z{scrape.park_z} F3000

        {% set SCRAPE_Z = Z %}
        {% if not scrape.rel_z %}
            {% set SCRAPE_Z = (Z - printer['gcode_move'].homing_origin.z) + general.probe %}
        {% endif %}

        _LOG LVL=TRACE NAME=opt.NOZZLE_SCRAPE MSG="Scraping at Z {SCRAPE_Z}"
        G0 Z{SCRAPE_Z}
        _POSITION_RELATIVE
        {% if scrape.on_y %}
            G0 Y-{DIST} F{scrape.speed}
            G0 Y{DIST}  F{scrape.speed}
        {% else %}
            G0 X-{DIST} F{scrape.speed}
            G0 X{DIST}  F{scrape.speed}
        {% endif %}
        _POSITION_ABSOLUTE
        G0 Z{scrape.park_z}
        _LOG NAME=opt.NOZZLE_SCRAPE MSG="Nozzle scraped!"
        _SET_STATUS STATUS=active
        _MACRO_EXIT NAME=NOZZLE_SCRAPE
    {% endif %}
