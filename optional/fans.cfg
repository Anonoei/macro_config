#####################################################################
#   fans
#####################################################################
[gcode_macro _FAN_STATUS]
variable_filter_counter: 0
gcode:

[delayed_gcode _FAN_LOOP]
initial_duration: 5
gcode:
    {% if "_CONFIG_FANS" in printer["gcode"].commands %}
        {% set fans = printer["gcode_macro _CONFIG_FANS"] %}
        {% set LOOP = printer["gcode_macro _FAN_STATUS"]%}

        {% if not fans.fans.filter|default(-1) == -1 %}
            SET_GCODE_VARIABLE MACRO=_FAN_STATUS VARIABLE=filter_counter VALUE={LOOP.filter_counter+5}
            {% if LOOP.filter_counter % 30 == 0 %}
                _FAN_FILTER_TIMER
            {% endif %}
            {% if LOOP.filter_counter % 300 == 0 %}
                _FAN_FILTER_FLUSH_TIMER
            {% endif %}
            {% for NAME in fans.fans.filter.keys() %}
                {% set FAN = fans.fans.filter[NAME] %}
                # _LOG LVL=TRACE NAME=opt.fans._FAN_LOOP MSG="Checking filter fan {NAME}: {FAN}"
                {% if printer.heater_bed.temperature|int <= 50 %}
                    _SET_FAN NAME={FAN.name} TYPE={FAN.type} VAL=0
                {% elif printer.print_stats.state == "printing" %}
                    _SET_FAN NAME={FAN.name} TYPE={FAN.type} VAL={FAN.config.speed}
                {% endif %}
            {% endfor %}
        {% endif %}
        {% if not fans.fans.heater|default(-1) == -1 %}
            {% for NAME in fans.fans.heater.keys() %}
                {% set FAN = fans.fans.heater[NAME] %}
                # _LOG LVL=TRACE NAME=opt.fans._FAN_LOOP MSG="Checking heater fan {NAME}: {FAN}"
                {% if printer[FAN.config.heater].target >= FAN.config.threshold %}
                    {% set h_temp = printer[FAN.config.heater].temperature %}
                    {% set t_temp = printer[FAN.config.heater].target %}
                    {% if h_temp >= t_temp -2 or h_temp <= t_temp + 2 %}
                        _SET_FAN NAME={FAN.name} TYPE={FAN.type} VAL={FAN.config.speeds.reached}
                    {% elif h_temp < t_temp - 2 %}
                        _SET_FAN NAME={FAN.name} TYPE={FAN.type} VAL={FAN.config.speeds.heating}
                    {% elif t_temp < h_temp %}
                        _SET_FAN NAME={FAN.name} TYPE={FAN.type} VAL={FAN.config.speeds.cooling}
                    {% endif %}
                {% endif %}
            {% endfor %}
        {% endif %}
    {% endif %}
    UPDATE_DELAYED_GCODE ID=_FAN_LOOP DURATION=5

[gcode_macro _SET_FAN_STATUS]
gcode:
    {% if printer["gcode"].commands["_CONFIG_FANS"] %}
        {% set fans = printer["gcode_macro _CONFIG_FANS"] %}

        {% set STATUS = params.STATUS|string|lower %}

        {% if not fans.fans.status|default(-1) == -1 %}
            _LOG LVL=DEBUG NAME=opt.fans._SET_FAN_STATUS MSG="Setting status fans to '{STATUS}'"
            {% for NAME in fans.fans.status %}
                _CLEAR_BUFFER
                {% if fans.fans.status[NAME].config %}
                    {% set FAN = fans.fans.status[NAME] %}
                    {% if FAN.config.status[STATUS] %}
                        {% if FAN.type == "temperature" %}
                            _SET_FAN NAME={FAN.name} TYPE={FAN.type} VAL={FAN.config.status[STATUS]}
                        {% endif %}
                    {% endif %}
                {% endif %}
            {% endfor %}
        {% endif %}
    {% endif %}

[gcode_macro _SET_FAN]
gcode:
    {% set NAME = params.NAME|string %}
    {% set TYPE = params.TYPE|string %}

    {% set VAL = params.VAL %}

    {% if TYPE == "fan_generic" %}
        {% set VAL = VAL|float %}
        {% if not printer[TYPE + " " + NAME].speed|float == VAL %}
            _LOG LVL=TRACE NAME=opt.fans._SET_FAN MSG="Setting fan '{TYPE}' '{NAME}' to {VAL}"
            SET_FAN_SPEED FAN={NAME} SPEED={VAL}
        {% endif %}
    {% elif TYPE == "temperature_fan" %}
        {% if not printer[TYPE + " " + NAME].target|float == VAL %}
            _LOG LVL=TRACE NAME=opt.fans._SET_FAN MSG="Setting fan '{TYPE}' '{NAME}' to {VAL}"
            SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN={NAME} TARGET={VAL}
        {% endif %}
    {% else %}
        _LOG LVL=WARN NAME=opt.fans._SET_FAN MSG="Unknown fan type '{TYPE}'"
    {% endif %}

[gcode_macro RESET_FILTER]
description: Resets the filter timer
gcode:
    SET_CONFIG SECT=FANS NAME=filter_time TO=0 SAVE=True
    _LOG NAME=opt.fans.filter.RESET_FILTER MSG="Filter timer has been reset."

[gcode_macro QUERY_FILTER]
description: Displays the amount of time filter has run since last reset
gcode:
    {% set loop = printer["gcode_macro _FAN_FILTER_TIMER"] %}
    {% set hours = "%.2f"|format(loop.filter_time|int / 3600) %}
    _LOG NAME=opt.fans.QUERY_FILTER MSG="Filter hours: {hours}"

[gcode_macro _FAN_FILTER_TIMER]
variable_filter_time: -1
gcode:
    {% if "_CONFIG_FANS" in printer["gcode"].commands %}
        {% set fans = printer["gcode_macro _CONFIG_FANS"] %}

        {% set cached_time = filter_time|int %}
        # Load time from saved variables
        {% if cached_time == -1 %}
            {% set cached_time = printer.save_variables.variables.filter_time|default(0) %}
            SET_GCODE_VARIABLE MACRO=_FAN_FILTER_TIMER VARIABLE=filter_time VALUE={cached_time}
        {% endif %}
        {% if not fans.fans.filter|default(-1) == - 1%}
            {% set FAN = fans.fans.filter.values()|list %}
            {% set FAN = FAN[0] %}
            # Update timer if fan is running, and printer is currently printing
            {% if printer[FAN.type + " " + FAN.name].speed|float > 0 and printer.print_stats.state == "printing" %}
                SET_GCODE_VARIABLE MACRO=_FAN_FILTER_TIMER VARIABLE=filter_time VALUE={ cached_time + 30}
            {% endif %}
            # Check run time vs replacement time
            {% set replacement_seconds = FAN.config.replace_time|float * 3600 %}
            {% if cached_time > replacement_seconds %}
                { FAN.config.replace_action }
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro _FAN_FILTER_FLUSH_TIMER]
gcode:
    {% if "_CONFIG_FANS" in printer["gcode"].commands %}
        {% set saved_time = printer.save_variables.variables.filter_time|default(0)|float %}
        {% set actual_time = printer["gcode_macro _FAN_FILTER_TIMER"].filter_time|float %}
        {% if not saved_time == actual_time %}
            SAVE_VARIABLE VARIABLE=filter_time VALUE={actual_time}
        {% endif %}
    {% endif %}
