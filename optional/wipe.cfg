
[gcode_macro NOZZLE_WIPE]
description: Wipe the nozzle on the brush
gcode:
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% set SHAKES = params.SHAKES|default(CFG.bucket_wipe_shakes)|int %}
    {% set WIPES  = params.WIPES|default(CFG.bucket_wipes)|int %}
    {% set SPEED  = params.SPEED|default(CFG.bucket_wipe_speed)|int %}

    {% set VALID  = True %}

    {% if not CFG.bucket_brush %}
        _LOG NAME=opt.NOZZLE_WIPE MSG="Skipping nozzle wipe"
    {% else %}
        {% set wipe_default = 'X' not in params and 'Y' not in params and 'DIAG' not in params and 'SHAKE' not in params %}

        {% set ON_X         = CFG.bucket_brush_on_x %}
        {% set BRUSH_LEFT   = CFG.bucket_brush_left|float %}
        {% set BRUSH_RIGHT  = CFG.bucket_brush_right|float %}
        {% set BRUSH_WIDTH  = CFG.bucket_brush_width|float %}
        {% set BRUSH_LENGTH = BRUSH_RIGHT - BRUSH_LEFT %}
        {% set BRUSH_ALT    = CFG.bucket_brush_alt %}

        {% set TRAVEL_Z     = CFG.bucket_z + CFG.bucket_zhop %}
        {% set SPEED_XY     = CFG.bucket_speed|float %}
        {% set SPEED_Z      = CFG.bucket_speed_z|float %}

        {% set BRUSH_Z      = CFG.bucket_brush_top|float * 0.75 %}
        {% set SHAKE_Z      = CFG.bucket_brush_top|float * 0.50 %}

        {% set BRUSH_AXIS_MID  = BRUSH_LEFT + (BRUSH_LENGTH/2) %}

        {% set max = printer.toolhead.axis_maximum %}
        {% set min = printer.toolhead.axis_minimum %}
        {% set mid = {'x': (max.x-min.x)/2, 'y': (max.y-min.y)/2, 'z': (max.z-min.z)/2} %}

        {% if not CFG.bed_cleared %}
            FORCE_HOME NAME="WIPE.NOZZLE_WIPE"
            {% set safe_height = printer['gcode_macro _LAYER_STATUS'].height %}
            {% if SHAKE_Z <= safe_height %}
                _LOG LVL=WARN NAME=opt.NOZZLE_WIPE MSG="Cannot wipe when print is higher than brush height!"
                {% set VALID = False %}
            {% endif %}
        {% endif %}

        {% if VALID %}
            {% set pos = printer.toolhead.position %}
            _CG28
            _SET_STATUS STATUS=cleaning

            _LOG NAME=opt.NOZZLE_WIPE MSG="Wiping nozzle..."

            _MACRO_ENTRY NAME=NOZZLE_WIPE
            _POSITION_ABSOLUTE
            {% set END_LEFT = 0 %}

            {% if pos.z < TRAVEL_Z %}
                G0 Z{TRAVEL_Z} F{SPEED_Z}
            {% endif %}

            {% if ON_X %}
                {% set AXIS_1 = "X" %}
                {% set AXIS_2 = "Y" %}
                {% set END_LEFT = pos.x <= BRUSH_AXIS_MID %}
            {% else %}
                {% set AXIS_1 = "Y" %}
                {% set AXIS_2 = "X" %}
                {% set END_LEFT = pos.y <= BRUSH_AXIS_MID %}
            {% endif %}

            ## Perform wipe
            _LOG LVL=TRACE NAME=opt.NOZZLE_WIPE MSG="Wiping at Z {BRUSH_Z}"
            _POSITION_ABSOLUTE
            G0 Z{TRAVEL_Z} F{SPEED_Z}
            {% if END_LEFT %}
                G0 {AXIS_1}{BRUSH_LEFT} {AXIS_2}{BRUSH_ALT} F{SPEED_XY}
            {% else %}
                G0 {AXIS_1}{BRUSH_RIGHT} {AXIS_2}{BRUSH_ALT} F{SPEED_XY}
            {% endif %}
            G0 Z{BRUSH_Z} F{SPEED_Z}

            {% for w in range(END_LEFT, (WIPES + 1 + END_LEFT)) %}
                {% if w % 2 == 0 %} ; Wipe from right side
                    G0 {AXIS_1}{BRUSH_LEFT} F{SPEED}
                    G0 {AXIS_1}{BRUSH_RIGHT} F{SPEED}
                {% else %} ; Wipe from left side
                    G0 {AXIS_1}{BRUSH_RIGHT} F{SPEED}
                    G0 {AXIS_1}{BRUSH_LEFT} F{SPEED}
                {% endif %}
            {% endfor %}

            {% if wipe_default or 'SHAKE' in params %}
                ## Perform shake
                _POSITION_ABSOLUTE
                _LOG LVL=TRACE NAME=opt.NOZZLE_WIPE MSG="Shaking at Z {SHAKE_Z}"
                G0 {AXIS_1}{BRUSH_AXIS_MID} {AXIS_2}{BRUSH_ALT} F{SPEED_XY}
                G0 Z{SHAKE_Z} F{SPEED_Z}
                _POSITION_RELATIVE
                {% for s in range(0, 2) %}
                    G0 {AXIS_1}2  F{SPEED}
                    G0 {AXIS_1}-4 F{SPEED}
                    G0 {AXIS_1}2  F{SPEED}
                {% endfor %}
                {% for s in range(0, (SHAKES + 1)) %}
                    G0 {AXIS_1}2  F{SPEED*2}
                    G0 {AXIS_1}-4 F{SPEED*2}
                    G0 {AXIS_1}2  F{SPEED*2}
                {% endfor %}
            {% endif %}

            _CLEAR_BUFFER
            _POSITION_ABSOLUTE
            G0 Z{TRAVEL_Z} F{SPEED_Z}
            {% if END_LEFT %}
                G0 {AXIS_1}{BRUSH_LEFT-10} F{SPEED_XY}
            {% else %}
                G0 {AXIS_1}{BRUSH_RIGHT+10} F{SPEED_XY}
            {% endif %}
            _MACRO_EXIT NAME=NOZZLE_WIPE

            _LOG NAME=opt.NOZZLE_WIPE MSG="Nozzle cleaned!"
            _SET_STATUS STATUS=active
        {% endif %}
    {% endif %}

[gcode_macro NOZZLE_SCRAPE]
description: Scrape the nozzle to remove stubborn filament
gcode:
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% set DIST = params.DIST|default(CFG.scrape_dflt_dist)|int %}
    {% set X    = params.X|default(CFG.scrape_dflt_x) %}
    {% set Y    = params.Y|default(CFG.scrape_dflt_y) %}
    {% set Z    = params.Z|default(CFG.scrape_dflt_z) %}

    {% if not CFG.scrape %}
        _LOG NAME=opt.NOZZLE_SCRAPE MSG="Skipping nozzle scrape"
    {% else %}
        FORCE_CLEAR NAME="opt.NOZZLE_SCRAPE"
        _LOG NAME=opt.NOZZLE_SCRAPE MSG="Scraping nozzle..."
        _CG28
        _SET_STATUS STATUS=cleaning

        _MACRO_ENTRY NAME=NOZZLE_SCRAPE
        _POSITION_ABSOLUTE
        G0 X{X} Y{Y} Z{CFG.scrape_park_z} F3000

        {% set SCRAPE_Z = Z %}
        {% if not CFG.scrape_rel_z %}
            {% set SCRAPE_Z = (Z - printer['gcode_move'].homing_origin.z) + CFG.printer_probe %}
        {% endif %}

        _LOG LVL=TRACE NAME=opt.NOZZLE_SCRAPE MSG="Scraping at Z {SCRAPE_Z}"
        G0 Z{SCRAPE_Z}
        _POSITION_RELATIVE
        {% if CFG.scrape_on_y %}
            G0 Y-{DIST} F{CFG.scrape_speed}
            G0 Y{DIST}  F{CFG.scrape_speed}
        {% else %}
            G0 X-{DIST} F{CFG.scrape_speed}
            G0 X{DIST}  F{CFG.scrape_speed}
        {% endif %}
        _POSITION_ABSOLUTE
        G0 Z{CFG.scrape_park_z}
        _LOG NAME=opt.NOZZLE_SCRAPE MSG="Nozzle scraped!"
        _SET_STATUS STATUS=active
        _MACRO_EXIT NAME=NOZZLE_SCRAPE
    {% endif %}
