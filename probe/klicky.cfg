#####################################################################
#   probe.klicky
#####################################################################
# Adapted from Klicky-Probe macros
## https://github.com/jlas1/Klicky-Probe/tree/main/Klipper_macros

## -- Configuration -- ##
# variable_travel_speed  : 1000
# variable_dock          : {'x': 67.5, 'y': 300, 'z': -128}
# variable_dock_move     : {'x': 50  , 'y':   0, 'z':    0}
# variable_attach_move   : {'x':  0  , 'y': -50, 'z':    0}
# variable_dock_speed    :   50   # Dock speed
# variable_release_speed :   50   # Un-attach speed
## -- Configuration -- ##

[gcode_macro _PROBE_STATUS]
description: Probe status variables
variable_probe_name     : "KLICKY"
variable_probe_attached : False
variable_probe_state    : False
variable_probe_lock     : False
gcode:
    _LOG NAME=probe.klicky MSG="attached: {probe_attached}"
    _LOG NAME=probe.klicky MSG="state: {probe_attached}"
    _LOG NAME=probe.klicky MSG="lock: {probe_lock}"

[gcode_macro _PROBE_CHECK]
gcode:
    {% set query_probe_triggered = printer.probe.last_query %}
    {% set action  = params.ACTION|default('') %}

    # If triggered, probe is not attached
    {% if query_probe_triggered %}
        _LOG LVL=DEBUG NAME=probe.klicky.PROBE_CHECK MSG="Probe docked"
        SET_GCODE_VARIABLE MACRO=_PROBE_STATUS VARIABLE=probe_attached VALUE={ False }
    {% else %}
         _LOG LVL=DEBUG NAME=probe.klicky.PROBE_CHECK MSG="Probe attached"
        SET_GCODE_VARIABLE MACRO=_PROBE_STATUS VARIABLE=probe_attached VALUE={ True }
    {% endif %}

    {% if action == 'query' %}
        SET_GCODE_VARIABLE MACRO=_PROBE_STATUS VARIABLE=probe_state VALUE={ query_probe_triggered }
    {% endif %}

    {% if not query_probe_triggered and action == 'dock' %}
        _LOG LVL=ERROR NAME=probe.klicky.PROBE_CHECK MSG="Probe dock failed!"
    {% endif %}

    {% if query_probe_triggered and action == 'attach' %}
        _LOG LVL=ERROR NAME=probe.klicky.PROBE_CHECK MSG="Probe attach failed!"
    {% endif %}

[gcode_macro _PROBE_LOCK]
description: Lock probe
gcode:
    {% set state = params.LOCK|default(0)|int %}

    {% if state == 1 %}
        _LOG NAME=probe.klicky.PROBE_LOCK MSG="Probe locked"
        SET_GCODE_VARIABLE MACRO=_PROBE_STATUS VARIABLE=probe_lock VALUE={ True }
    {% elif state == 0 %}
        _LOG NAME=probe.klicky.PROBE_LOCK MSG="Probe unlocked"
        SET_GCODE_VARIABLE MACRO=_PROBE_STATUS VARIABLE=probe_lock VALUE={ False }
    {% else %}
        _LOG NAME=probe.klicky.PROBE_LOCK LVL=ERROR MSG="Unknown lock state: {state}"
    {% endif %}

[gcode_macro _KLICKY_BEFORE]
gcode:
    {% set homing = printer["gcode_macro _CONFIG_HOMING"] %}

    _MACRO_ENTRY NAME=_KLICKY_BEFORE

    {% if not 'xy' in printer.toolhead.homed_axes %}
        _LOG LVL=ERROR NAME=probe.klicky MSG="X and Y must be homed first!"
    {% endif %}

    {% if not 'z' in printer.toolhead.homed_axes %}
        _LOG LVL=TRACE NAME=probe.klicky MSG="Setting Z=0"
        SET_KINEMATIC_POSITION Z={homing.safety_height - homing.z_hop} # Manually set Z
        _POSITION_RELATIVE
        G0 Z{homing.z_hop} F{homing.speed_z * 60}
        _POSITION_ABSOLUTE
    {% elif printer.gcode_move.gcode_position.z < homing.safety_height %}
        G0 Z{homing.safety_height} F{homing.speed_z * 60}
    {% endif %}

    _MACRO_EXIT NAME=_KLICKY_BEFORE

[gcode_macro _KLICKY_AFTER]
gcode:
    {% set homing = printer["gcode_macro _CONFIG_HOMING"] %}

    _MACRO_ENTRY NAME=_KLICKY_AFTER
    {% if printer.gcode_move.gcode_position.z < homing.safety_height %}
        _POSITION_RELATIVE
        G0 Z{homing.z_hop} F{homing.speed_z * 60} # Post z-home z-hop
        _POSITION_ABSOLUTE
    {% endif %}
    _MACRO_EXIT NAME=_KLICKY_AFTER

[gcode_macro _PROBE_PRE]
description: Attaches klicky probe
gcode:
    {% set homing = printer["gcode_macro _CONFIG_HOMING"] %}
    {% set probe = printer["gcode_macro _CONFIG_PROBE"] %}

    {% set klicky = printer["gcode_macro _PROBE_STATUS"] %}

    {% set safe_z        = homing.safety_height %}
    {% set z_hop         = homing.z_hop %}
    {% set speed_hop     = homing.speed_z * 60 %}

    {% set dock_x        = probe.dock.x %}
    {% set dock_y        = probe.dock.y %}
    {% set dock_z        = probe.dock.z %}

    {% set dock_move_x   = probe.dock_move.x %}
    {% set dock_move_y   = probe.dock_move.y %}
    {% set dock_move_z   = probe.dock_move.z %}

    {% set attach_move_x = probe.attach_move.x %}
    {% set attach_move_y = probe.attach_move.y %}
    {% set attach_move_z = probe.attach_move.z %}

    {% set speed_travel  = probe.travel_speed * 60 %}
    {% set speed_dock    = probe.dock_speed * 60 %}
    {% set speed_release = probe.release_speed * 60 %}

    {% if not klicky.probe_attached and not klicky.probe_lock %}
        _KLICKY_BEFORE

        _MACRO_ENTRY NAME=_PROBE_PRE_INT
        _POSITION_ABSOLUTE

        _LOG LVL=TRACE NAME=probe.klicky.PROBE_PRE MSG="Moving to dock entry with G0 X{dock_x + attach_move_x} Y{dock_y + attach_move_y}"
        {% if dock_move_x == 0.0 %}
            G0 X{dock_x + attach_move_x} F{speed_travel}
        {% elif dock_move_y == 0.0 %}
            G0 Y{dock_y + attach_move_y} F{speed_travel}
        {% endif %}
        G0 X{dock_x + attach_move_x} Y{dock_y + attach_move_y} F{speed_travel} # Move near dock
        {% if dock_z != -128 %}
            G0 Z{dock_z + attach_move_z} F{speed_hop} # Lift if needed
        {% endif %}

        _LOG LVL=TRACE NAME=probe.klicky.PROBE_PRE MSG="Moving to the dock with G0 X{dock_x} Y{dock_y}"
        G0 X{dock_x} Y{dock_y} F{speed_release} # Attach probe
        {% if dock_z != -128 %}
            G0 Z{dock_z} F{speed_hop}
        {% endif %}

        _LOG LVL=TRACE NAME=probe.klicky.PROBE_PRE MSG="Moving from the dock to G0 X{dock_x + attach_move_x} Y{dock_y + attach_move_y}"
        {% if dock_z != -128 %}
            G0 Z{dock_z + dock_move_z} F{release_feedrate}
        {% endif %}
        G0 X{dock_x + attach_move_x} Y{dock_y + attach_move_y} F{speed_release}

        _KLICKY_AFTER

        PROBE_CHECK action=attach
        _MACRO_EXIT NAME=_PROBE_PRE_INT
    {% elif klicky.probe_lock %}
        _LOG LVL=DEBUG NAME=probe.klicky.PROBE_PRE MSG="Probe is locked!"
        PROBE_CHECK action=query
    {% else %}
        _LOG LVL=DEBUG NAME=probe.klicky.PROBE_PRE MSG="Probe is already attached"
        PROBE_CHECK action=query
    {% endif %}

[gcode_macro _PROBE_POS]
description: Docks klicky probe
gcode:
    {% set homing = printer["gcode_macro _CONFIG_HOMING"] %}
    {% set probe = printer["gcode_macro _CONFIG_PROBE"] %}

    {% set klicky = printer["gcode_macro _PROBE_STATUS"] %}

    {% set safe_z        = homing.safety_height %}
    {% set z_hop         = homing.z_hop %}
    {% set speed_hop     = homing.speed_z * 60 %}

    {% set dock_x        = probe.dock.x %}
    {% set dock_y        = probe.dock.y %}
    {% set dock_z        = probe.dock.z %}

    {% set dock_move_x   = probe.dock_move.x %}
    {% set dock_move_y   = probe.dock_move.y %}
    {% set dock_move_z   = probe.dock_move.z %}

    {% set attach_move_x = probe.attach_move.x %}
    {% set attach_move_y = probe.attach_move.y %}
    {% set attach_move_z = probe.attach_move.z %}

    {% set speed_travel  = probe.travel_speed * 60 %}
    {% set speed_dock    = probe.dock_speed * 60 %}
    {% set speed_release = probe.release_speed * 60 %}

    {% if klicky.probe_attached and not klicky.probe_lock %}
        _KLICKY_BEFORE

        _MACRO_ENTRY NAME=_PROBE_POS_INT
        _POSITION_ABSOLUTE

        _LOG LVL=TRACE NAME=probe.klicky.PROBE_POS MSG="Moving to dock attach position: G0 X{dock_x + attach_move_x} Y{dock_y + attach_move_y}"
        {% if dock_move_x == 0.0 %}
            G0 X{dock_x + attach_move_x} F{speed_travel}
        {% elif dock_move_y == 0.0 %}
            G0 Y{dock_y + attach_move_y} F{speed_travel}
        {% endif %}
        G0 X{dock_x + attach_move_x} Y{dock_y + attach_move_y} F{speed_travel} # Move to attach position
        {% if dock_z != -128 %}
            G0 Z{dock_z + attach_move_z} F{speed_release}
        {% endif %}

        _LOG LVL=TRACE NAME=probe.klicky.PROBE_POS MSG="Moving to dock: G0 X{dock_x} Y{dock_y} Z{dock_z}"
        G0 X{dock_x} Y{dock_y} F{speed_release} # move to dock
        {% if dock_z != -128 %}
            G0 Z{dock_z} F{dock_feedrate}
        {% endif %}

        _LOG LVL=TRACE NAME=probe.klicky.PROBE_POS MSG="Moving away from dock: G0 X{dock_x + dock_move_x} Y{dock_y + dock_move_y}"
        G0 X{dock_x + dock_move_x} Y{dock_y + dock_move_y} F{speed_release}
        {% if dock_z != -128 %}
            G0 Z{dock_z + dock_move_z} F{speed_release}
        {% endif %}

        _KLICKY_AFTER

        PROBE_CHECK action=dock
        _MACRO_EXIT NAME=_PROBE_POS_INT
    {% elif klicky.probe_lock %}
        _LOG LVL=DEBUG NAME=probe.klicky.PROBE_POS MSG="Probe is locked!"
        PROBE_CHECK action=query
    {% else %}
        _LOG LVL=DEBUG NAME=probe.klicky.PROBE_POS MSG="Probe is already docked"
        PROBE_CHECK action=query
    {% endif %}
